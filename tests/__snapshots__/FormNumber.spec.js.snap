// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Number component Accepts custom styles 1`] = `
<div
  className="pretty-row"
  type="text"
>
  <label
    className="pretty-label"
    data-active={false}
    data-validity={true}
    htmlFor="test"
  >
    <span
      className="pretty-label-text"
      data-active={false}
    >
      This is a test field
    </span>
    <input
      className="test-class"
      data-validity={true}
      name="test"
      onBlur={[Function]}
      onFocus={[Function]}
      required={true}
      type="number"
    />
  </label>
  <div
    className="pretty-validation"
    data-validity={true}
  >
    
  </div>
</div>
`;

exports[`Number component Accepts intitial value 1`] = `
<div
  className="pretty-row"
  intialValue={7}
  type="text"
>
  <label
    className="pretty-label"
    data-active={false}
    data-validity={true}
    htmlFor="test"
  >
    <span
      className="pretty-label-text"
      data-active={false}
    >
      This is a test field
    </span>
    <input
      className="test-class"
      data-validity={true}
      max={10}
      min={1}
      name="test"
      onBlur={[Function]}
      onFocus={[Function]}
      required={true}
      type="number"
    />
  </label>
  <div
    className="pretty-validation"
    data-validity={true}
  >
    
  </div>
</div>
`;

exports[`Number component Accepts min and max props 1`] = `
<div
  className="pretty-row"
  type="text"
>
  <label
    className="pretty-label"
    data-active={false}
    data-validity={true}
    htmlFor="test"
  >
    <span
      className="pretty-label-text"
      data-active={false}
    >
      This is a test field
    </span>
    <input
      className="test-class"
      data-validity={true}
      max={10}
      min={1}
      name="test"
      onBlur={[Function]}
      onFocus={[Function]}
      required={true}
      type="number"
    />
  </label>
  <div
    className="pretty-validation"
    data-validity={true}
  >
    
  </div>
</div>
`;

exports[`Number component Matches snapshot 1`] = `
<div
  className="pretty-row"
  type="text"
>
  <input
    className="pretty-input"
    data-validity={true}
    name="pets"
    onBlur={[Function]}
    onFocus={[Function]}
    required={false}
    type="number"
  />
  ;
  <div
    className="pretty-validation"
    data-validity={true}
  >
    
  </div>
</div>
`;

exports[`Number component Renders required field 1`] = `
<div
  className="pretty-row"
  type="text"
>
  <label
    className="pretty-label"
    data-active={false}
    data-validity={true}
    htmlFor="test"
  >
    <span
      className="pretty-label-text"
      data-active={false}
    >
      This is a test field
    </span>
    <input
      className="pretty-input"
      data-validity={true}
      name="test"
      onBlur={[Function]}
      onFocus={[Function]}
      required={true}
      type="number"
    />
  </label>
  <div
    className="pretty-validation"
    data-validity={true}
  >
    Please fill in this required field
  </div>
</div>
`;

exports[`Number component Renders required props 1`] = `
<div
  className="pretty-row"
  type="text"
>
  <label
    className="pretty-label"
    data-active={false}
    data-validity={true}
    htmlFor="test"
  >
    <span
      className="pretty-label-text"
      data-active={false}
    >
      This is a test field
    </span>
    <input
      className="pretty-input"
      data-validity={true}
      name="test"
      onBlur={[Function]}
      onFocus={[Function]}
      required={false}
      type="number"
    />
  </label>
  <div
    className="pretty-validation"
    data-validity={true}
  >
    
  </div>
</div>
`;

exports[`Number component Renders without a validation message 1`] = `
<div
  className="pretty-row"
  type="text"
>
  <label
    className="pretty-label"
    data-active={false}
    data-validity={true}
    htmlFor="test"
  >
    <span
      className="pretty-label-text"
      data-active={false}
    >
      This is a test field
    </span>
    <input
      className="pretty-input"
      data-validity={true}
      name="test"
      onBlur={[Function]}
      onFocus={[Function]}
      required={true}
      type="number"
    />
  </label>
  <div
    className="pretty-validation"
    data-validity={true}
  >
    
  </div>
</div>
`;
